@import url(https://fonts.googleapis.com/css?family=Raleway:300,400,600);

.main-header .logo {
  background-color: transparent !important;
  color: #ffffff;
  border-bottom: 0px solid transparent;
}

.main-header .logo:hover {
  background-color: transparent !important;
}

.category li {
  list-style-type: none;
}

.category li a {
  padding: 4px 15px 4px 4px;
  margin: 0;
  width: auto !important;
  height: auto !important;
  text-align: left !important;
}

.category li a i {
  padding-right: 5px;
  display: inline-block !important;
}

.category li ul {
  padding-left: 10px;
}

.category li ul li a {
  color: #455c66 !important;
}

.review-wrapper {
  position: relative;
  display: block;
  padding: 15px 0;
  margin-top: -15px;
  margin-bottom: -15px;
}

.review-wrapper .box-comments {
  background: transparent;
}

.review-wrapper .box-comments .box-comment {
  padding: 8px 7px;
  border-bottom: 1px solid #eee;
  background: #f7f7f7;
  margin-bottom: 10px;
}

@media (min-width: 992px) {
  .review-wrapper {
    padding-left: 215px;
  }
}

.review-control {
  position: absolute;
  left: 0;
  width: 200px;
  z-index: 1;
}

.review-paper {
  position: relative;
  min-height: 720px;
  z-index: 2;
  background-color: #fff;
  box-shadow: none;
}

.review-paper.open {
  -webkit-transform: translate(215px, 0);
  transform: translate(215px, 0);
}

.review-paper > .review-paper-footer,
.review-paper > .review-paper-heading {
  padding: 15px;
}

.review-paper > .review-paper-body {
  position: relative;
  z-index: 1;
}

.review-paper > .review-paper-footer {
  position: relative;
  height: 60px;
  z-index: 2;
}

.review-paper > .review-paper-heading {
  position: relative;
  height: 60px;
  z-index: 2;
  top: 0;
}

.review-paper > .review-paper-footer {
  bottom: 0;
}

.review-paper .panel {
  box-shadow: none;
}

.review-paper .panel.review-list-item {
  margin-bottom: 0;
}

.review-paper .panel.review-list-item.panel-expanded {
  position: relative;
}

.review-paper .panel.review-list-item.panel-expanded > .panel-heading .media-left {
  min-width: 76px;
}

.review-paper .panel.review-list-item.panel-expanded > .panel-heading .media-left > .btn {
  vertical-align: top;
  padding-left: 0;
  padding-right: 0;
}

.review-paper .panel.review-list-item.panel-expanded > .panel-body {
  padding-left: 86px;
}

.review-paper .panel [data-toggle=panel-expand] {
  cursor: pointer;
}

@media (min-width: 992px) {
  .review-paper > .review-paper-body {
    padding-right: 15px;
    padding-left: 15px;
  }
}

.delete-file,
.rename-file,
.download-file,
.tag-file {
  position: absolute;
  top: auto;
  right: 0;
  display: none;
  padding: 3px;
}

.rename-file {
  display: none;
  top: 30px;
  z-index: 9999;
}

.locked-file {
  position: absolute;
  top: 5px;
  color: chocolate;
}

.download-file {
  display: none;
  top: 30px;
  z-index: 9999;
}

.file-item {
  padding-top: 10px;
  padding-bottom: 10px;
}

.file-item.checked {
  box-shadow: inset 0 0 0 3px #fff, inset 0 0 0 7px #0073aa;
}

.file-item .mailbox-attachment-icon {
  border: 1px solid transparent;
}

.file-item .mailbox-attachment-info {
  overflow: hidden;
}

.file-item:hover .mailbox-attachment-icon {
  border: 1px solid #3c8dbc;
}

.file-item .item-icons {
  height: 2em;
}

.file-item .item-icon {
  width: 100%;
  height: 150px;
  display: block;
  font-size: 120px;
  text-align: center;
  list-style-type: none !important;
}

.file-item .item-image {
  width: 100%;
  display: block;
  font-size: 120px;
  text-align: center;
  list-style-type: none !important;
}

.file-item:hover .delete-file {
  display: block;
  z-index: 9999;
}

.file-item:hover .download-file {
  display: block;
  z-index: 9999;
}

#my-awesome-dropzone-body {
  border: 2px dashed aliceblue;
  border-radius: 5px;
  background: white;
}

#my-awesome-dropzone-body .dz-message {
  text-decoration: dashed;
  font-weight: 700;
}

#my-awesome-dropzone-body > .dz-preview {
  display: none;
}

.files li {
  list-style-type: none;
}

.directory-item:hover .delete-file {
  display: block;
  z-index: 9999;
}

.directory-item:hover .rename-file {
  display: block;
  z-index: 9999;
}

.media_tags {
  display: inline-block;
}

.media_tags li {
  list-style-type: none;
  display: inline;
}

.media_tags li a {
  border-bottom: 2px solid transparent;
  background: transparent;
}

.media_tags li.active a,
.media_tags li:hover a {
  border-radius: 0;
  background: #3d3d3d;
  color: whitesmoke;
  border-bottom: 2px solid #3d3d3d;
}

.dropzone {
  border: 2px dashed aliceblue !important;
  border-radius: 5px;
  background: white;
}

.playing .mailbox-attachment-icon {
  border: 1px solid #3c8dbc;
}

.directories .box-default {
  border: none;
  box-shadow: none;
  border-left: 2px dashed aliceblue;
  min-height: 400px;
}

.directories .box-header {
  border-bottom: 2px dashed aliceblue;
}

#fileLinker-modal .selected-block {
  word-wrap: break-word;
}

#fileLinker-modal .selected-block div {
  text-align: center;
}

#fileLinker-modal .selected-block div img {
  width: 100%;
  height: auto;
  position: relative;
  background: #f4f4f4;
  border: 2px solid #f4f4f4;
}

#fileLinker-modal .selected-block div .item-icon {
  width: 100%;
  height: 120px;
  display: block;
  font-size: 90px;
  text-align: center;
  list-style-type: none !important;
  border: 2px solid #f4f4f4;
  background: #f4f4f4;
}

.files.selected-block {
  word-wrap: break-word;
  display: block;
  width: 100%;
}

.files.selected-block div {
  text-align: center;
}

.files.selected-block div img {
  width: 100%;
  height: auto;
  position: relative;
  background: #f4f4f4;
  border: 2px solid #f4f4f4;
}

.files.selected-block div .item-icon {
  width: 100%;
  height: 120px;
  display: block;
  font-size: 90px;
  text-align: center;
  list-style-type: none !important;
  border: 2px solid #f4f4f4;
  background: #f4f4f4;
}

.items-list .delete-btn,
.items-list .rename-btn,
.items-list .download-btn,
.items-list .info-btn {
  display: inline-block;
  position: relative;
}

li.play-status {
  position: relative;
  border-radius: 0;
  display: none;
}

li.play-status i {
  color: lightyellow;
}

input[type="checkbox"].minimal {
  display: none;
}

section.content > div.row > div > div > div.box-header > div > form > div > button.btn.btn-info {
  padding: 9px;
}

.modal.modal-wide .modal-dialog {
  width: 90%;
}

.modal-wide .modal-body {
  overflow-y: auto;
}

.tallModal .modal-body {
  min-height: 500px;
}

/**
site imports
 */

/* --------------------------------

Primary style

-------------------------------- */

.sidebar-nav-trigger {
  /* navigation trigger - visible on mobile devices only */
  float: right;
  position: relative;
  display: block;
  width: 34px;
  height: 44px;
  margin-right: 5%;
  /* hide text */
  overflow: hidden;
  white-space: nowrap;
  color: transparent;
}

.sidebar-nav-trigger span,
.sidebar-nav-trigger span::before,
.sidebar-nav-trigger span::after {
  /* hamburger icon in CSS */
  position: absolute;
  display: inline-block;
  height: 3px;
  width: 24px;
  background: #3e454c;
}

.sidebar-nav-trigger span {
  /* line in the center */
  position: absolute;
  top: 50%;
  right: 5px;
  margin-top: -2px;
  -webkit-transition: background 0.2s;
  transition: background 0.2s;
}

.sidebar-nav-trigger span::before,
.sidebar-nav-trigger span::after {
  /* other 2 lines */
  content: '';
  right: 0;
  /* Force Hardware Acceleration in WebKit */
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform-origin: 0% 50%;
  transform-origin: 0% 50%;
  -webkit-transition: -webkit-transform 0.2s;
  transition: -webkit-transform 0.2s;
  transition: transform 0.2s;
  transition: transform 0.2s, -webkit-transform 0.2s;
}

.sidebar-nav-trigger span::before {
  /* menu icon top line */
  top: -6px;
}

.sidebar-nav-trigger span::after {
  /* menu icon bottom line */
  top: 6px;
}

.sidebar-nav-trigger.nav-is-visible span {
  /* hide line in the center */
  background: rgba(62, 69, 76, 0);
}

.sidebar-nav-trigger.nav-is-visible span::before,
.sidebar-nav-trigger.nav-is-visible span::after {
  /* keep visible other 2 lines */
  background: #3e454c;
}

.sidebar-nav-trigger.nav-is-visible span::before {
  -webkit-transform: translateX(4px) translateY(-3px) rotate(45deg);
  transform: translateX(4px) translateY(-3px) rotate(45deg);
}

.sidebar-nav-trigger.nav-is-visible span::after {
  -webkit-transform: translateX(4px) translateY(2px) rotate(-45deg);
  transform: translateX(4px) translateY(2px) rotate(-45deg);
}

@media only screen and (min-width: 768px) {
  .sidebar-nav-trigger {
    display: none;
  }
}

.sidebar-search {
  position: relative;
  margin: 1.2em 5% 0.6em;
}

.sidebar-search.is-hidden {
  opacity: 0;
}

.sidebar-search::before {
  /* lens icon */
}

.sidebar-search input {
  padding-left: 32px;
  width: 100%;
  height: 36px;
  border: none;
  border-radius: .25em;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
}

.sidebar-search input:focus {
  outline: none;
}

@media only screen and (min-width: 768px) {
  .sidebar-search {
    float: left;
    display: inline-block;
    width: 250px;
    height: 100%;
    margin: 0 0 0 2.5em;
  }

  .sidebar-search.is-hidden {
    /* reset style */
    opacity: 1;
  }

  .sidebar-search::before {
    background-position: 0 -16px;
    left: 1em;
  }

  .sidebar-search form,
  .sidebar-search input {
    height: 100%;
    width: 100%;
  }

  .sidebar-search input {
    border: none;
    padding-left: 2.6em;
    border-radius: 0;
    background-color: #f8f8f8;
    border-left: 1px solid #f9f9f9;
    color: #3e454c;
  }

  .sidebar-search input::-webkit-input-placeholder {
    color: #fafafa;
  }

  .sidebar-search input::-moz-placeholder {
    color: #fafafa;
  }

  .sidebar-search input:-moz-placeholder {
    color: #fafafa;
  }

  .sidebar-search input:-ms-input-placeholder {
    color: #fafafa;
  }
}

/* --------------------------------

Top Navigation

-------------------------------- */

.sidebar-nav {
  /* top nav - not visible on mobile devices */
  display: none;
}

.sidebar-nav li {
  list-style-type: none;
}

.sidebar-nav ul {
  list-style-type: none;
}

@media only screen and (min-width: 768px) {
  .sidebar-nav {
    display: block;
    float: right;
    height: 100%;
  }
}

.sidebar-top-nav > li > a::before {
  /* reset style */
  display: none;
}

.sidebar-top-nav > li a {
  padding: 1em 5% !important;
}

.sidebar-top-nav img {
  /* avatar image */
  position: absolute;
  left: 1.8em;
  top: 50%;
  bottom: auto;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  height: 20px;
  width: 20px;
  border-radius: 50%;
  display: none;
}

@media only screen and (min-width: 768px) {
  .sidebar-top-nav {
    height: 100%;
  }

  .sidebar-top-nav a {
    display: block;
    font-size: 1.4rem;
    color: #3e454c;
  }

  .sidebar-top-nav > li {
    display: inline-block;
    margin-right: 1em;
    height: 100%;
  }

  .sidebar-top-nav > li:last-of-type {
    margin-right: 0;
  }

  .sidebar-top-nav > li a {
    padding: 1em .6em !important;
  }

  .sidebar-top-nav img {
    display: block;
  }
}

@media only screen and (min-width: 1170px) {
  .sidebar-top-nav li:not(.has-children) a:hover {
    color: #3097D1;
  }
}

/* --------------------------------

Sidebar

-------------------------------- */

.site_sidebar {
  position: relative;
  height: auto;
  display: block;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  padding: 0px 0 0;
  background-color: #f8f8f8;
  visibility: hidden;
  opacity: 0;
  overflow: hidden;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-transition: opacity 0.2s 0s, visibility 0s 0.2s;
  transition: opacity 0.2s 0s, visibility 0s 0.2s;
}

.site_sidebar.nav-is-visible {
  opacity: 1;
  visibility: visible;
  overflow: visible;
  -webkit-overflow-scrolling: touch;
  -webkit-transition: opacity 0.2s 0s, visibility 0s 0s;
  transition: opacity 0.2s 0s, visibility 0s 0s;
  max-height: none;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}

.site_sidebar > ul {
  padding: 0.6em 0;
}

.site_sidebar > ul:last-of-type {
  padding-bottom: 0;
}

.site_sidebar .sidebar-label,
.site_sidebar a {
  display: block;
  padding: 1em 5%;
}

.site_sidebar .sidebar-label {
  text-transform: uppercase;
  font-weight: bold;
  color: #656a70;
  font-size: 1rem;
  letter-spacing: .1em;
}

.site_sidebar a {
  position: relative;
  color: #3e454c;
  font-size: 1.4rem;
}

.site_sidebar ul.sidebar-top-nav > li:last-of-type > a {
  border-bottom: none;
}

.site_sidebar > ul > li > a {
  padding-left: calc(5% + 24px);
  border-bottom: 1px solid #f0f0f0;
}

.site_sidebar > ul > li.overview > a::before {
  background-position: -64px 0;
}

.site_sidebar > ul > li.notifications > a::before {
  background-position: -80px 0;
}

.site_sidebar > ul > li.comments > a::before {
  background-position: -48px 0;
}

.site_sidebar > ul > li.bookmarks > a::before {
  background-position: -32px 0;
}

.site_sidebar > ul > li.images > a::before {
  background-position: 0 0;
}

.site_sidebar > ul > li.users > a::before {
  background-position: -16px 0;
}

.site_sidebar .count {
  /* notification badge */
  position: absolute;
  top: 50%;
  bottom: auto;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  right: calc(5% + 16px + 0.4em);
  padding: 0.2em 0.4em;
  background-color: #00BCD4;
  border-radius: .25em;
  color: whitesmoke;
  font-weight: bold;
  font-size: 1.2rem;
  text-align: center;
}

.site_sidebar .action-btn a {
  display: block;
  margin: 0 5%;
  padding: 1em 0;
  background-color: #3097D1;
  border-radius: .25em;
  border: none;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.2);
  text-align: center;
  color: #3e454c;
  font-weight: bold;
}

.site_sidebar .action-btn a::before {
  display: none;
}

@media only screen and (min-width: 768px) {
  .site_sidebar {
    position: relative;
    float: left;
    top: auto;
    width: 100%;
    height: auto;
    padding-top: 0px;
    /* reset style */
    visibility: visible;
    opacity: 1;
    overflow: visible;
    max-height: none;
  }

  .site_sidebar.nav-is-visible {
    box-shadow: none;
  }

  .site_sidebar.is-fixed {
    position: fixed;
  }

  .site_sidebar > ul {
    /* reset style */
    padding: 0;
  }

  .site_sidebar .sidebar-label {
    /* remove labels on minified version of the sidebar */
    display: none;
  }

  .site_sidebar a {
    font-size: 1.2rem;
    text-align: center;
  }

  .site_sidebar > ul > li > a {
    padding: calc(2.2em + 24px) 0 2.4em;
    text-align: left;
    border-bottom: none;
    font-size: 1.4rem;
  }

  .site_sidebar > ul > li > a::before {
    left: 50%;
    right: auto;
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    top: 2.4em;
  }

  .site_sidebar .active > a {
    /* current page */
    box-shadow: inset 3px 0 0 #3097D1;
    background-color: #ebebeb;
  }

  .site_sidebar .action-btn a {
    margin: 1em 10% 0;
  }

  .site_sidebar .count {
    height: 8px;
    width: 8px;
    border-radius: 50%;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
    padding: 0;
    top: 2em;
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    left: calc(50% + 5px);
    right: auto;
    color: transparent;
  }
}

@media only screen and (min-width: 1170px) {
  .site_sidebar {
    width: 100%;
  }

  .site_sidebar > ul {
    padding: 0.6em 0;
    list-style-type: none;
  }

  .site_sidebar > ul > li:not(.action-btn):hover > a {
    background-color: #ebebeb;
    list-style-type: none;
  }

  .site_sidebar > ul > li > a {
    padding: 1em 1em 1em 42px;
    text-align: left;
    border-bottom: none;
  }

  .site_sidebar > ul > li > a::before {
    top: 50%;
    bottom: auto;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    left: 18px;
  }

  .site_sidebar .sidebar-label {
    display: block;
    padding: 1em 18px;
  }

  .site_sidebar .action-btn {
    text-align: left;
  }

  .site_sidebar .action-btn a {
    margin: 0 18px;
  }

  .no-touch .site_sidebar .action-btn a:hover {
    background-color: #45a1d6;
  }

  .site_sidebar .count {
    /* reset style */
    color: whitesmoke;
    height: auto;
    width: auto;
    border-radius: .25em;
    padding: .2em .4em;
    top: 50%;
    bottom: auto;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    right: 18px;
    left: auto;
    box-shadow: none;
  }
}

.has-children ul {
  position: relative;
  width: 100%;
  list-style-type: none;
  display: none;
  background-color: #ebebeb;
}

.has-children > a::after {
  /* arrow icon */
}

.has-children.selected > ul {
  display: block;
}

.has-children.selected > a::after {
  -webkit-transform: translateY(-50%) rotate(180deg);
  transform: translateY(-50%) rotate(180deg);
}

@media only screen and (min-width: 768px) {
  .has-children {
    position: relative;
  }

  .has-children ul {
    position: absolute;
    top: 0;
    left: 100%;
    width: 160px;
    padding: 0;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }

  .has-children ul a {
    text-align: left;
    border: none;
    padding: 1em;
  }

  .no-touch .has-children ul a:hover {
    color: #3097D1;
  }

  .has-children > a::after {
    display: none;
  }

  .site_sidebar .has-children.selected > a {
    /* focus state -> show sub pages */
    background-color: #ebebeb;
  }

  .sidebar-top-nav .has-children {
    position: relative;
    background-color: #e4e4e4;
  }

  .sidebar-top-nav .has-children > a {
    height: 100%;
    padding: 0 calc(1.8em + 22px) 0 calc(1.8em + 26px) !important;
    line-height: 0px;
  }

  .sidebar-top-nav .has-children > a::after {
    display: block;
    right: 1.8em;
  }

  .sidebar-top-nav .has-children ul {
    background-color: #d2d2d2;
    width: 200px;
    top: 100%;
    right: 0;
    left: auto;
    box-shadow: 0 1px 10px rgba(0, 0, 0, 0.2);
  }

  .sidebar-top-nav .has-children ul a {
    padding-left: 18px !important;
  }
}

@media only screen and (min-width: 1170px) {
  .has-children > ul {
    width: 100%;
    z-index: 1;
  }

  .has-children ul a {
    padding-left: 18px;
  }

  .has-children.active > ul {
    /* if the item is active, make the subnavigation visible */
    position: relative;
    display: block;
    /* reset style */
    left: 0;
    box-shadow: none;
  }

  .no-touch .site_sidebar .has-children:hover > ul,
  .site_sidebar .has-children.hover > ul {
    /* show subnavigation on hover */
    display: block;
    opacity: 1;
    visibility: visible;
    z-index: 999;
  }
}

.site_sidebar {
  list-style: none !important;
}

.site_sidebar ul li {
  list-style-type: none;
  border-bottom: 1px solid #bfc5ca;
}

.site_sidebar ul li li {
  list-style-type: none;
  border-bottom: none;
}

.site_sidebar ul > li > ul {
  max-height: 400px;
  overflow: hidden;
  overflow-y: auto;
}

.site_sidebar ul > li > ul li {
  border-bottom: 1px solid #bfc5ca;
}

.extend_text_alignment,
.product .product-review-counter,
.product .product-price-box {
  padding: 3px 12px 0 0;
  margin-bottom: 0;
  font-size: 14px;
}

.product .product-title {
  margin-top: 0;
  font-size: 24px;
  text-transform: uppercase;
  color: #414141;
}

.product .product-quantity input[type="number"] {
  width: 52px;
}

.product .product-price-box {
  display: block;
  position: relative;
  text-align: left;
  clear: both;
}

.product .product-price-box .product-price {
  color: #3097D1;
  font-size: 1.8rem;
  font-weight: 700;
}

.product .product-status {
  display: block;
  width: 100%;
  height: 34px;
  padding: 6px 0px;
  font-size: 14px;
  line-height: 1.42857143;
  color: #555;
  background-color: #fff;
  border: 1px solid transparent;
}

.product .product-add-to-cart {
  background: #00BCD4;
  color: #f8f8f8;
}

.product .product-tabs-container {
  margin-top: 20px;
}

.product .product-social-sharing .product-social-list {
  padding-left: 0;
  margin-top: 20px;
}

.product .product-social-sharing .product-social-list span {
  font-size: 18px;
  text-transform: uppercase;
  color: #414141;
  margin-right: 20px;
}

.product .product-social-sharing li {
  list-style-type: none;
  display: inline-block;
}

.product .product-images-list {
  width: 75px;
  height: 1px;
  display: block;
  float: left;
  position: relative;
}

.product .product-images-list .product-popup-gallery {
  height: 290px;
  overflow: hidden;
}

.product .product-images-list .product-popup-gallery a img {
  margin-bottom: 24px;
  outline: #00BCD4;
  border: 2px solid #3e454c;
}

.product .product-images-list .product-popup-gallery a img:hover {
  border-color: #00BCD4;
}

.product .product-main-img {
  margin-left: 82px;
  display: block;
  float: left;
}

.product .product-main-img img {
  width: 100%;
  height: 100%;
}

.product-item {
  padding: 15px;
  background: #fff;
  margin-top: 20px;
  position: relative;
  border: 1px solid #eaeaea;
}

.product-item:hover {
  box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.4);
}

.product-item:after {
  content: ".";
  display: block;
  height: 0;
  clear: both;
  visibility: hidden;
  font-size: 0;
  line-height: 0;
  background: -webkit-linear-gradient(rgba(255, 255, 255, 0) 0%, #fff 80%, #fff 100%);
  background: linear-gradient(rgba(255, 255, 255, 0) 0%, #fff 80%, #fff 100%);
}

.sticker {
  position: absolute;
  top: 0;
  left: 0;
  width: 63px;
  height: 63px;
}

.sticker-new {
  background: none;
  left: auto;
  right: 0;
}

.item-img-wrapper {
  position: relative;
}

.item-img-wrapper div {
  background: rgba(0, 0, 0, 0.3);
  position: absolute;
  left: 0;
  top: 0;
  display: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.product-item:hover > .item-img-wrapper > div {
  display: block;
}

.item-img-wrapper div .btn {
  padding: 3px 10px;
  color: #fff;
  border: 1px #fff solid;
  margin: -13px 5px 0;
  background: transparent;
  text-transform: uppercase;
  position: relative;
  top: 50%;
  line-height: 1.4;
  font-size: 12px;
}

.product-item .btn:hover {
  background: #3097D1;
  border-color: #c8c8c8;
}

.product-item h3 {
  font-size: 14px;
  font-weight: 300;
  padding-bottom: 4px;
  text-transform: uppercase;
}

.product-item h3 a {
  color: #3e4d5c;
}

.product-item h3 a:hover {
  color: #E02222;
}

.item-price {
  color: #3097D1;
  font-size: 18px;
  float: left;
  padding-top: 1px;
}

.product-item .add2cart {
  float: right;
  color: #a8aeb3;
  border: 1px #ededed solid;
  padding: 3px 6px;
  text-transform: uppercase;
}

.product-item .add2cart:hover {
  color: #fff;
  background: #3097D1;
  border-color: #3097D1;
}

/* Magnific Popup CSS */

.mfp-bg {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1042;
  overflow: hidden;
  position: fixed;
  background: #0b0b0b;
  opacity: 0.8;
  filter: alpha(opacity=80);
}

.mfp-wrap {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1043;
  position: fixed;
  outline: none !important;
  -webkit-backface-visibility: hidden;
}

.mfp-container {
  text-align: center;
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  padding: 0 8px;
  box-sizing: border-box;
}

.mfp-container:before {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
}

.mfp-align-top .mfp-container:before {
  display: none;
}

.mfp-content {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  margin: 0 auto;
  text-align: left;
  z-index: 1045;
}

.mfp-inline-holder .mfp-content,
.mfp-ajax-holder .mfp-content {
  width: 100%;
  cursor: auto;
}

.mfp-ajax-cur {
  cursor: progress;
}

.mfp-zoom-out-cur,
.mfp-zoom-out-cur .mfp-image-holder .mfp-close {
  cursor: zoom-out;
}

.mfp-zoom {
  cursor: pointer;
  cursor: zoom-in;
}

.mfp-auto-cursor .mfp-content {
  cursor: auto;
}

.mfp-close,
.mfp-arrow,
.mfp-preloader,
.mfp-counter {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
      user-select: none;
}

.mfp-loading.mfp-figure {
  display: none;
}

.mfp-hide {
  display: none !important;
}

.mfp-preloader {
  color: #CCC;
  position: absolute;
  top: 50%;
  width: auto;
  text-align: center;
  margin-top: -0.8em;
  left: 8px;
  right: 8px;
  z-index: 1044;
}

.mfp-preloader a {
  color: #CCC;
}

.mfp-preloader a:hover {
  color: #FFF;
}

.mfp-s-ready .mfp-preloader {
  display: none;
}

.mfp-s-error .mfp-content {
  display: none;
}

button.mfp-close,
button.mfp-arrow {
  overflow: visible;
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: none;
  display: block;
  outline: none;
  padding: 0;
  z-index: 1046;
  box-shadow: none;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.mfp-close {
  width: 44px;
  height: 44px;
  line-height: 44px;
  position: absolute;
  right: 0;
  top: 0;
  text-decoration: none;
  text-align: center;
  opacity: 0.65;
  filter: alpha(opacity=65);
  padding: 0 0 18px 10px;
  color: #FFF;
  font-style: normal;
  font-size: 28px;
  font-family: Arial, Baskerville, monospace;
}

.mfp-close:hover,
.mfp-close:focus {
  opacity: 1;
  filter: alpha(opacity=100);
}

.mfp-close:active {
  top: 1px;
}

.mfp-close-btn-in .mfp-close {
  color: #333;
}

.mfp-image-holder .mfp-close,
.mfp-iframe-holder .mfp-close {
  color: grey;
  right: -6px;
  text-align: right;
  padding-right: 16px;
  width: 100%;
  outline: none;
}

.mfp-counter {
  position: absolute;
  top: 0;
  right: 0;
  color: #CCC;
  font-size: 12px;
  line-height: 22px;
  white-space: nowrap;
  padding-right: 5px;
}

.mfp-arrow {
  position: absolute;
  opacity: 0.65;
  filter: alpha(opacity=65);
  margin: 0;
  top: 50%;
  margin-top: -55px;
  padding: 0;
  width: 90px;
  height: 110px;
  -webkit-tap-highlight-color: transparent;
}

.mfp-arrow:active {
  margin-top: -54px;
}

.mfp-arrow:hover,
.mfp-arrow:focus {
  opacity: 1;
  filter: alpha(opacity=100);
}

.mfp-arrow:before,
.mfp-arrow:after,
.mfp-arrow .mfp-b,
.mfp-arrow .mfp-a {
  content: '';
  display: block;
  width: 0;
  height: 0;
  position: absolute;
  left: 0;
  top: 0;
  margin-top: 35px;
  margin-left: 35px;
  border: medium inset transparent;
}

.mfp-arrow:after,
.mfp-arrow .mfp-a {
  border-top-width: 13px;
  border-bottom-width: 13px;
  top: 8px;
}

.mfp-arrow:before,
.mfp-arrow .mfp-b {
  border-top-width: 21px;
  border-bottom-width: 21px;
  opacity: 0.7;
}

.mfp-arrow-left {
  left: 0;
}

.mfp-arrow-left:after,
.mfp-arrow-left .mfp-a {
  border-right: 17px solid #FFF;
  margin-left: 31px;
}

.mfp-arrow-left:before,
.mfp-arrow-left .mfp-b {
  margin-left: 25px;
  border-right: 27px solid #3F3F3F;
}

.mfp-arrow-right {
  right: 0;
}

.mfp-arrow-right:after,
.mfp-arrow-right .mfp-a {
  border-left: 17px solid #FFF;
  margin-left: 39px;
}

.mfp-arrow-right:before,
.mfp-arrow-right .mfp-b {
  border-left: 27px solid #3F3F3F;
}

.mfp-iframe-holder {
  padding-top: 40px;
  padding-bottom: 40px;
}

.mfp-iframe-holder .mfp-content {
  line-height: 0;
  width: 100%;
  max-width: 900px;
}

.mfp-iframe-holder .mfp-close {
  top: -40px;
}

.mfp-iframe-scaler {
  width: 100%;
  height: 0;
  overflow: hidden;
  padding-top: 56.25%;
}

.mfp-iframe-scaler iframe {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);
  background: #000;
}

/* Main image in popup */

img.mfp-img {
  width: auto;
  max-width: 100%;
  height: auto;
  display: block;
  line-height: 0;
  box-sizing: border-box;
  padding: 40px 0 40px;
  margin: 0 auto;
}

/* The shadow behind the image */

.mfp-figure {
  line-height: 0;
}

.mfp-figure:after {
  content: '';
  position: absolute;
  left: 0;
  top: 40px;
  bottom: 40px;
  display: block;
  right: 0;
  width: auto;
  height: auto;
  z-index: -1;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);
  background: #444;
}

.mfp-figure small {
  color: #BDBDBD;
  display: block;
  font-size: 12px;
  line-height: 14px;
  padding-top: 20px;
  font-weight: bold;
}

.mfp-figure figure {
  margin: 0;
  background: white;
  padding: 0 10%;
  width: 100%;
}

.mfp-figure figcaption {
  min-width: 800px;
  max-width: 1000px;
}

.mfp-bottom-bar {
  margin-top: -36px;
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  cursor: auto;
}

.mfp-title {
  text-align: left;
  line-height: 18px;
  color: #303f9f;
  font: 600 22px "Raleway", sans-serif;
  word-wrap: break-word;
  padding-right: 36px;
  padding-left: 10px;
}

.mfp-image-holder .mfp-content {
  max-width: 100%;
}

.mfp-gallery .mfp-image-holder .mfp-figure {
  cursor: pointer;
}

@media screen and (max-width: 800px) and (orientation: landscape), screen and (max-height: 300px) {
  /**
       * Remove all paddings around the image on small screen
       */

  .mfp-img-mobile .mfp-image-holder {
    padding-left: 0;
    padding-right: 0;
  }

  .mfp-img-mobile img.mfp-img {
    padding: 0;
  }

  .mfp-img-mobile .mfp-figure:after {
    top: 0;
    bottom: 0;
  }

  .mfp-img-mobile .mfp-figure small {
    display: inline;
    margin-left: 5px;
  }

  .mfp-img-mobile .mfp-bottom-bar {
    background: rgba(0, 0, 0, 0.6);
    bottom: 0;
    margin: 0;
    top: auto;
    padding: 3px 5px;
    position: fixed;
    box-sizing: border-box;
  }

  .mfp-img-mobile .mfp-bottom-bar:empty {
    padding: 0;
  }

  .mfp-img-mobile .mfp-counter {
    right: 5px;
    top: 3px;
  }

  .mfp-img-mobile .mfp-close {
    top: 0;
    right: 0;
    width: 35px;
    height: 35px;
    line-height: 35px;
    background: rgba(0, 0, 0, 0.6);
    position: fixed;
    text-align: center;
    padding: 0;
  }
}

@media all and (max-width: 900px) {
  .mfp-arrow {
    -webkit-transform: scale(0.75);
    transform: scale(0.75);
  }

  .mfp-arrow-left {
    -webkit-transform-origin: 0;
    transform-origin: 0;
  }

  .mfp-arrow-right {
    -webkit-transform-origin: 100%;
    transform-origin: 100%;
  }

  .mfp-container {
    padding-left: 6px;
    padding-right: 6px;
  }
}

.mfp-ie7 .mfp-img {
  padding: 0;
}

.mfp-ie7 .mfp-bottom-bar {
  width: 600px;
  left: 50%;
  margin-left: -300px;
  margin-top: 5px;
  padding-bottom: 5px;
}

.mfp-ie7 .mfp-container {
  padding: 0;
}

.mfp-ie7 .mfp-content {
  padding-top: 44px;
}

.mfp-ie7 .mfp-close {
  top: 0;
  right: 0;
  padding-top: 0;
}

/* text-based popup styling */

.white-popup {
  position: relative;
  background: #FFF;
  padding: 25px;
  width: auto;
  max-width: 400px;
  margin: 0 auto;
}

#inline-popups {
  display: none;
}

/*

====== Zoom effect ======

*/

.mfp-zoom-in {
  /* start state */
  /* animate in */
  /* animate out */
}

.mfp-zoom-in .mfp-with-anim {
  opacity: 0;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  -webkit-transform: scale(0.8);
          transform: scale(0.8);
}

.mfp-zoom-in.mfp-bg {
  opacity: 0;
  -webkit-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
}

.mfp-zoom-in.mfp-ready .mfp-with-anim {
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}

.mfp-zoom-in.mfp-ready.mfp-bg {
  opacity: 0.8;
}

.mfp-zoom-in.mfp-removing .mfp-with-anim {
  -webkit-transform: scale(0.8);
          transform: scale(0.8);
  opacity: 0;
}

.mfp-zoom-in.mfp-removing.mfp-bg {
  opacity: 0;
}

.slider-text {
  padding-top: 40px;
  display: block;
}

.slider-text .col-md-6 {
  overflow: hidden;
}

.slider-text h2 {
  font-family: 'Josefin Sans', sans-serif;
  font-weight: 400;
  font-size: 30px;
  letter-spacing: 3px;
  margin: 30px auto;
  padding-left: 40px;
}

.slider-text h2::after {
  border-top: 2px solid #c7c7c7;
  content: "";
  position: absolute;
  bottom: 35px;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */